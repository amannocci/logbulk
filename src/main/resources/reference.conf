setting {
}

input {
  # rabbitmq {
  #   user = ""
  #   password = ""
  #   hosts = [""]
  #   port = 1024
  #   virtualHost = ""
  #   ssl = false
  #   queue = ""
  #   autoAck = false
  #   connectionTimeout = 60
  #   interval = 1
  #   intervalMax = 60
  #   maxAttempts = -1
  #   dispatch = "app-route"
  #   fallback = "fallback-route"
  #   worker = false
  # }

  # heartbeat {
  #   message = ""
  #   interval = 1
  #   dispatch = "app-route"
  #   fallback = "fallback-route"
  #   worker = false
  # }
}

transform {}

output {
  # rabbitmq {
  #   user = ""
  #   password = ""
  #   hosts = [""]
  #   port = 1024
  #   virtualHost = ""
  #   ssl = false
  #   exchange = ""
  #   routingKey = ""
  #   mode = "publish"
  #   connectionTimeout = 60
  #   interval = 1
  #   intervalMax = 60
  #   maxAttempts = -1
  #   mailbox = 1000
  #   instance = 1
  #   fallback = "fallback-route"
  #   worker = false
  # }
}

route {}

component {
  input {
    heartbeat = "io.techcode.logbulk.pipeline.input.HeartbeatInput"
    rabbitmq = "io.techcode.logbulk.pipeline.input.RabbitMQInput"
  }

  transform {}

  output {
    rabbitmq = "io.techcode.logbulk.pipeline.output.RabbitMQOutput"
  }
}